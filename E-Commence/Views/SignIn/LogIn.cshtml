@model E_Commence.Models.LogIn

@{
    Layout = null;
    string errorMessage = string.Empty;
    if (ViewBag.ErrorMessage != null)
    {
        errorMessage = ViewBag.ErrorMessage;
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Log In</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/Scripts/jquery.validate.min.js")
    @Scripts.Render("~/Scripts/jquery.validate.unobtrusive.min.js")
    <link type="text/css" rel="stylesheet" href="~/Content/bootstrap.min.css" />
    <script type="text/javascript" src="~/Scripts/bootstrap.min.js"></script>
</head>
<body>
    @using (Html.BeginForm("ValidateUser", "SignIn", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="container">
            <h4>Log In</h4>
            <hr />
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div style="color: red;">
                    @errorMessage
                </div>
            }

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" value="Log In" class="btn btn-default" />
                </div>
                <div class="col-md-10">
                    @Html.ActionLink("Register User", "Register", "SignIn")
                </div>
            </div>
        </div>
    }
</body>
</html>
